/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import domain.FileUtils;
import domain.MetodosOrdenacao;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Doglas
 */
public class Principal extends javax.swing.JFrame {

    MetodosOrdenacao ordenacao;
    
    public Principal() {
        initComponents();
        this.ordenacao = new MetodosOrdenacao();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        seleciona = new javax.swing.ButtonGroup();
        painelSul = new javax.swing.JPanel();
        btOrdenar = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        painelCentral = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taPrincipal = new javax.swing.JTextArea();
        painelNorte = new javax.swing.JPanel();
        rbShellSort = new javax.swing.JRadioButton();
        rbQuickSort = new javax.swing.JRadioButton();
        rbHeapSort = new javax.swing.JRadioButton();
        rbBubbleSort = new javax.swing.JRadioButton();
        rbInsertionSort = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        cbArquivo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btOrdenar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btOrdenar.setText("Ordenar");
        btOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOrdenarActionPerformed(evt);
            }
        });

        btSair.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelSulLayout = new javax.swing.GroupLayout(painelSul);
        painelSul.setLayout(painelSulLayout);
        painelSulLayout.setHorizontalGroup(
            painelSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSulLayout.createSequentialGroup()
                .addGap(287, 287, 287)
                .addComponent(btOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(btSair, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        painelSulLayout.setVerticalGroup(
            painelSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSulLayout.createSequentialGroup()
                .addGroup(painelSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelSulLayout.createSequentialGroup()
                        .addComponent(btOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btSair, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(painelSul, java.awt.BorderLayout.PAGE_END);

        taPrincipal.setColumns(20);
        taPrincipal.setRows(5);
        jScrollPane1.setViewportView(taPrincipal);

        seleciona.add(rbShellSort);
        rbShellSort.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbShellSort.setText("Shell Sort");

        seleciona.add(rbQuickSort);
        rbQuickSort.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbQuickSort.setText("Quick Sort");

        seleciona.add(rbHeapSort);
        rbHeapSort.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbHeapSort.setText("Heap Sort");

        seleciona.add(rbBubbleSort);
        rbBubbleSort.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbBubbleSort.setText("Bubble Sort");

        seleciona.add(rbInsertionSort);
        rbInsertionSort.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbInsertionSort.setSelected(true);
        rbInsertionSort.setText("Insertion Sort");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Selecione o Método de Ordenação Desejado");

        cbArquivo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbArquivo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dados aleatórios", "Dados invertidos", "Dados ordenados" }));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Selecione o arquivo");

        javax.swing.GroupLayout painelNorteLayout = new javax.swing.GroupLayout(painelNorte);
        painelNorte.setLayout(painelNorteLayout);
        painelNorteLayout.setHorizontalGroup(
            painelNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelNorteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelNorteLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(83, 83, 83))
                    .addGroup(painelNorteLayout.createSequentialGroup()
                        .addComponent(cbArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 157, Short.MAX_VALUE)
                        .addComponent(rbInsertionSort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbShellSort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbQuickSort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbHeapSort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbBubbleSort)))
                .addGap(19, 19, 19))
        );
        painelNorteLayout.setVerticalGroup(
            painelNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelNorteLayout.createSequentialGroup()
                .addGroup(painelNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelNorteLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelNorteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addGap(9, 9, 9)
                .addGroup(painelNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbShellSort)
                    .addComponent(rbQuickSort)
                    .addComponent(rbHeapSort)
                    .addComponent(rbBubbleSort)
                    .addComponent(rbInsertionSort)
                    .addComponent(cbArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout painelCentralLayout = new javax.swing.GroupLayout(painelCentral);
        painelCentral.setLayout(painelCentralLayout);
        painelCentralLayout.setHorizontalGroup(
            painelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addGroup(painelCentralLayout.createSequentialGroup()
                .addGroup(painelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCentralLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(painelNorte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelCentralLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painelCentralLayout.setVerticalGroup(
            painelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCentralLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelNorte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7))
        );

        getContentPane().add(painelCentral, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
         System.exit(0);
    }//GEN-LAST:event_btSairActionPerformed

    private void btOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOrdenarActionPerformed
        btOrdenar.disable();
        try {
            String modo = "Dados de origem ordenado";
            String arq;
            arq = System.getProperty("user.dir")+"\\arquivos\\saidaOrdenada.txt";
            if (cbArquivo.getSelectedItem().equals("Dados aleatórios")) {
                modo = "Dados de origem aleatório";
                arq = System.getProperty("user.dir")+"\\arquivos\\saidaAleatoria.txt";
            } else if (cbArquivo.getSelectedItem().equals("Dados invertidos")) {
                modo = "Dados de origem inversa";
                arq = System.getProperty("user.dir")+"\\arquivos\\saidaInvertida.txt";
            }

            FileUtils fu = new FileUtils();

            this.ordenacao.setVet(fu.lerArquivo(arq));
            
            long tempo = 0;
            long trocas = 0;
            
            if (rbInsertionSort.isSelected()) {
                modo += " (Insertion Sort):";
                fu.gravarArquivo(this.ordenacao.insertionSort());
            } else if (rbShellSort.isSelected()) {
                modo += " (Shell Sort)";
                fu.gravarArquivo(this.ordenacao.shellSort());
            } else if (rbQuickSort.isSelected()) {
                modo += " (Quick Sort)";
                fu.gravarArquivo(this.ordenacao.quickSort());
            } else if (rbHeapSort.isSelected()) {
                modo += " (Heap Sort)";
                fu.gravarArquivo(this.ordenacao.heapSort());
            } else { // BubleSort
                modo += " (Buble Sort)";
                fu.gravarArquivo(this.ordenacao.bubbleSort());
            }
            
            taPrincipal.append(modo+"\n");
            taPrincipal.append("Tempo:\t"+String
                    .valueOf(this.ordenacao.getTempo())+" ms\n");
            taPrincipal.append("Comparações:\t"+String
                    .valueOf(this.ordenacao.getComparacoes())+"\n");
            taPrincipal.append("Movimentos:\t"+String
                    .valueOf(this.ordenacao.getMovimentos())+"\n");
            taPrincipal.append("Trocas:\t"+String
                    .valueOf(this.ordenacao.getTrocas())+"\n\n");

        } catch (NumberFormatException ex) {
            Logger.getLogger(Principal.class.getName())
                    .log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName())
                    .log(Level.SEVERE, null, ex);
        }
        btOrdenar.enable();
    }//GEN-LAST:event_btOrdenarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btOrdenar;
    private javax.swing.JButton btSair;
    private javax.swing.JComboBox cbArquivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPanel painelCentral;
    private javax.swing.JPanel painelNorte;
    private javax.swing.JPanel painelSul;
    private javax.swing.JRadioButton rbBubbleSort;
    private javax.swing.JRadioButton rbHeapSort;
    private javax.swing.JRadioButton rbInsertionSort;
    private javax.swing.JRadioButton rbQuickSort;
    private javax.swing.JRadioButton rbShellSort;
    private javax.swing.ButtonGroup seleciona;
    private javax.swing.JTextArea taPrincipal;
    // End of variables declaration//GEN-END:variables
}
